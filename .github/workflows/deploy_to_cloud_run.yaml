# Basic CI workflow which will build and deploy a container into Google Cloud Run

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

#Set up environment variables
env:
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}           
  RUN_REGION: asia-northeast1
  SOLUTION_NAME: techtestapp
        

jobs:
  setup-build-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.RUN_SA_KEY }}
        project_id: ${{ secrets.RUN_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Build the Docker image
    - name: Build
      run: |-
        docker build --tag "gcr.io/$PROJECT_ID/$SOLUTION_NAME-image:$GITHUB_SHA" .
    
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$SOLUTION_NAME-image:$GITHUB_SHA"        
    
    # Deploy image to Cloud Run
    - name: Deploy
      run: |-
        gcloud run deploy "$SOLUTION_NAME" \
          --quiet \
          --region "$RUN_REGION" \
          --image "gcr.io/$PROJECT_ID/$SOLUTION_NAME-image:$GITHUB_SHA" \
          --port 80 \
          --update-env-vars VTT_DBHOST=${{ secrets.RUN_SQL_HOST }},VTT_DBUSER=${{ secrets.RUN_SQL_USER }},VTT_DBPASSWORD=${{ secrets.RUN_SQL_PASSWORD }},VTT_DBNAME=${{ secrets.RUN_SQL_DB }},VTT_DBPORT=${{ secrets.RUN_SQL_PORT }},VTT_LISTENPORT=80,VTT_LISTENHOST=0.0.0.0 \
          --platform "managed" \
          --allow-unauthenticated \
          --command=["./entrypoint.sh"]